/* Generated by chaintool.  DO NOT EDIT */

package api

import (
	"errors"
	"github.com/hyperledger/fabric/core/chaincode/shim"
	pb "github.com/hyperledger/fabric/protos/peer"
)

type Dispatcher interface {
	Dispatch(stub shim.ChaincodeStubInterface, function int, params []byte) pb.Response
}

type Factory interface {
	Create(intf interface{}) (Dispatcher, error)
}

var factories = make(map[string]Factory)

func Register(name string, factory Factory) error {
	factories[name] = factory
	return nil
}

func Create(name string, intf interface{}) (Dispatcher, error) {
	factory, ok := factories[name]
	if !ok {
		return nil, errors.New("Factory not found")
	}

	return factory.Create(intf)
}
