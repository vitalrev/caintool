{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name example02.connection, :imports nil, :requires {fabric-sdk.core fabric-sdk.core, p promesa.core, promesa.core promesa.core, fabric.channel fabric-sdk.channel, fabric.user fabric-sdk.user, fabric-sdk.user fabric-sdk.user, fabric-sdk.eventhub fabric-sdk.eventhub, fabric-sdk.channel fabric-sdk.channel, fabric.eventhub fabric-sdk.eventhub, fabric fabric-sdk.core}, :uses nil, :defs {set-state-store {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :line 13, :column 8, :end-line 13, :end-column 23, :private true, :arglists (quote ([client path]))}, :private true, :name example02.connection/set-state-store, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :end-column 23, :method-params ([client path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([client path]))}, create-user {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :line 17, :column 8, :end-line 17, :end-column 19, :private true, :arglists (quote ([client identity]))}, :private true, :name example02.connection/create-user, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :end-column 19, :method-params ([client identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([client identity]))}, connect-orderer {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :line 25, :column 8, :end-line 25, :end-column 23, :private true, :arglists (quote ([client channel config]))}, :private true, :name example02.connection/connect-orderer, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :end-column 23, :method-params ([client channel config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([client channel config]))}, connect-peer {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :line 36, :column 8, :end-line 36, :end-column 20, :private true, :arglists (quote ([client channel config peercfg]))}, :private true, :name example02.connection/connect-peer, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :end-column 20, :method-params ([client channel config peercfg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 4, :fn-var true, :arglists (quote ([client channel config peercfg]))}, connect-eventhub {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :line 49, :column 8, :end-line 49, :end-column 24, :private true, :arglists (quote ([client channel config]))}, :private true, :name example02.connection/connect-eventhub, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :end-column 24, :method-params ([client channel config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 3, :fn-var true, :arglists (quote ([client channel config]))}, connect! {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :line 62, :column 7, :end-line 62, :end-column 15, :arglists (quote ([{:keys [config id channelId], :as options}]))}, :name example02.connection/connect!, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :end-column 15, :method-params ([p__8247]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [config id channelId], :as options}]))}, disconnect! {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :line 87, :column 7, :end-line 87, :end-column 18, :arglists (quote ([{:keys [eventhub]}]))}, :name example02.connection/disconnect!, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/connection.cljs", :end-column 18, :method-params ([p__8252]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eventhub]}]))}}, :require-macros {p promesa.core, promesa.core promesa.core}, :cljs.analyzer/constants {:seen #{:identity :api :mspid :config :channelId :ca :events :peers :client :channel :hostname :privatekey :certificate :id :url :orderer :principal :user :eventhub}, :order [:principal :mspid :privatekey :certificate :orderer :ca :hostname :url :api :peers :events :config :id :channelId :identity :client :channel :eventhub :user]}, :doc nil}