{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name example02.rpc, :imports nil, :requires {fabric-sdk.core fabric-sdk.core, p promesa.core, promesa.core promesa.core, fabric.channel fabric-sdk.channel, cljs.nodejs cljs.nodejs, nodejs cljs.nodejs, fabric-sdk.eventhub fabric-sdk.eventhub, fabric-sdk.channel fabric-sdk.channel, fabric.eventhub fabric-sdk.eventhub, fabric fabric-sdk.core}, :uses nil, :defs {create-base-request {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 13, :column 8, :end-line 13, :end-column 27, :private true, :arglists (quote ([{:keys [client peers channelId chaincodeId]}]))}, :private true, :name example02.rpc/create-base-request, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 27, :method-params ([p__8571]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [client peers channelId chaincodeId]}]))}, query {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 89, :column 7, :end-line 89, :end-column 12, :arglists (quote ([{:keys [client channel], :as options}]))}, :name example02.rpc/query, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 12, :method-params ([p__8652]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [client channel], :as options}]))}, instantiate {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 67, :column 7, :end-line 67, :end-column 18, :arglists (quote ([{:keys [client channel version], :as options}]))}, :name example02.rpc/instantiate, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 18, :method-params ([p__8641]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [client channel version], :as options}]))}, create-request {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 22, :column 8, :end-line 22, :end-column 22, :private true, :arglists (quote ([{:keys [func args], :as options}]))}, :private true, :name example02.rpc/create-request, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 22, :method-params ([p__8576]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [func args], :as options}]))}, install {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 55, :column 7, :end-line 55, :end-column 14, :arglists (quote ([{:keys [client channel path version], :as options}]))}, :name example02.rpc/install, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 14, :method-params ([p__8635]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [client channel path version], :as options}]))}, register-tx-event {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 37, :column 8, :end-line 37, :end-column 25, :private true, :arglists (quote ([eventhub txid]))}, :private true, :name example02.rpc/register-tx-event, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 25, :method-params ([eventhub txid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([eventhub txid]))}, decodejs {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 26, :column 8, :end-line 26, :end-column 16, :private true, :arglists (quote ([js]))}, :private true, :name example02.rpc/decodejs, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 16, :method-params ([js]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([js]))}, forward-endorsements {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 49, :column 8, :end-line 49, :end-column 28, :private true, :arglists (quote ([{:keys [eventhub request tmo], :as options}]))}, :private true, :name example02.rpc/forward-endorsements, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 28, :method-params ([p__8630]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eventhub request tmo], :as options}]))}, transaction {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([{:keys [client channel], :as options}]))}, :name example02.rpc/transaction, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 18, :method-params ([p__8647]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [client channel], :as options}]))}, send-transaction {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 42, :column 8, :end-line 42, :end-column 24, :private true, :arglists (quote ([{:keys [channel response]}]))}, :private true, :name example02.rpc/send-transaction, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 24, :method-params ([p__8619]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [channel response]}]))}, verify-results {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :line 29, :column 8, :end-line 29, :end-column 22, :private true, :arglists (quote ([[results proposal header :as response]]))}, :private true, :name example02.rpc/verify-results, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/example02/rpc.cljs", :end-column 22, :method-params ([p__8581]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[results proposal header :as response]]))}}, :require-macros {p promesa.core, promesa.core promesa.core}, :cljs.analyzer/constants {:seen #{:response :args :path :request :chaincodePath :channelId :func :peers :txId :client :channel :chaincodeVersion :chaincodeId :targets :fcn :tmo :chainId :status :chaincodeType :version :keywordize-keys :eventhub}, :order [:client :peers :channelId :chaincodeId :chaincodeType :targets :chainId :txId :func :args :fcn :keywordize-keys :status :response :channel :eventhub :request :tmo :path :version :chaincodeVersion :chaincodePath]}, :doc nil}