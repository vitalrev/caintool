{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name fabric-sdk.channel, :imports nil, :requires {p promesa.core, promesa.core promesa.core}, :uses nil, :defs {new {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 10, :column 7, :end-line 10, :end-column 10, :arglists (quote ([client name]))}, :name fabric-sdk.channel/new, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 10, :method-params ([client name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([client name]))}, initialize {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([channel]))}, :name fabric-sdk.channel/initialize, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 17, :method-params ([channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([channel]))}, add-peer {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 16, :column 7, :end-line 16, :end-column 15, :arglists (quote ([channel instance]))}, :name fabric-sdk.channel/add-peer, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 15, :method-params ([channel instance]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel instance]))}, add-orderer {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 19, :column 7, :end-line 19, :end-column 18, :arglists (quote ([channel instance]))}, :name fabric-sdk.channel/add-orderer, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 18, :method-params ([channel instance]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel instance]))}, set-dev-mode {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([channel enabled]))}, :name fabric-sdk.channel/set-dev-mode, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 19, :method-params ([channel enabled]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel enabled]))}, send-instantiate-proposal {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 25, :column 7, :end-line 25, :end-column 32, :arglists (quote ([channel request]))}, :name fabric-sdk.channel/send-instantiate-proposal, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 32, :method-params ([channel request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel request]))}, send-transaction-proposal {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 28, :column 7, :end-line 28, :end-column 32, :arglists (quote ([channel request]))}, :name fabric-sdk.channel/send-transaction-proposal, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 32, :method-params ([channel request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel request]))}, send-transaction {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 31, :column 7, :end-line 31, :end-column 23, :arglists (quote ([channel request]))}, :name fabric-sdk.channel/send-transaction, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 23, :method-params ([channel request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel request]))}, query-by-chaincode {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :line 34, :column 7, :end-line 34, :end-column 25, :arglists (quote ([channel request]))}, :name fabric-sdk.channel/query-by-chaincode, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/src/fabric_sdk/channel.cljs", :end-column 25, :method-params ([channel request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel request]))}}, :require-macros {m fabric-sdk.macros, fabric-sdk.macros fabric-sdk.macros, p promesa.core, promesa.core promesa.core}, :doc nil}