{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name promesa.protocols, :imports nil, :requires nil, :uses nil, :defs {-cancel {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 47, :column 4, :end-line 47, :end-column 11, :protocol promesa.protocols/ICancellable, :doc nil, :arglists (quote ([_]))}, :protocol promesa.protocols/ICancellable, :name promesa.protocols/-cancel, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, -map {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 30, :column 4, :end-line 30, :end-column 8, :protocol promesa.protocols/IPromise, :doc "Chain a promise.", :arglists (quote ([_ callback]))}, :protocol promesa.protocols/IPromise, :name promesa.protocols/-map, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 8, :method-params ([_ callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ callback])), :doc "Chain a promise."}, IPromiseFactory {:meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 41, :column 14, :end-line 41, :end-column 29, :doc "A promise constructor abstraction.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-promise [[_]]}}}, :protocol-symbol true, :name promesa.protocols/IPromiseFactory, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 29, :column 1, :line 41, :protocol-info {:methods {-promise [[_]]}}, :info nil, :end-line 41, :tag any, :impls #{}, :doc "A promise constructor abstraction.", :jsdoc ("@interface")}, -promise {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 43, :column 4, :end-line 43, :end-column 12, :protocol promesa.protocols/IPromiseFactory, :doc "Create a promise instance.", :arglists (quote ([_]))}, :protocol promesa.protocols/IPromiseFactory, :name promesa.protocols/-promise, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Create a promise instance."}, -extract {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 36, :column 4, :end-line 36, :end-column 12, :protocol promesa.protocols/IState, :doc "Extract the current value.", :arglists (quote ([_]))}, :protocol promesa.protocols/IState, :name promesa.protocols/-extract, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Extract the current value."}, IScheduler {:meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 50, :column 14, :end-line 50, :end-column 24, :doc "A generic abstraction for scheduler facilities.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-schedule [[_ ms func]]}}}, :protocol-symbol true, :name promesa.protocols/IScheduler, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 24, :column 1, :line 50, :protocol-info {:methods {-schedule [[_ ms func]]}}, :info nil, :end-line 50, :tag any, :impls #{}, :doc "A generic abstraction for scheduler facilities.", :jsdoc ("@interface")}, IState {:meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 34, :column 14, :end-line 34, :end-column 20, :doc "Additional state/introspection abstraction.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-extract [[_]], -resolved? [[_]], -rejected? [[_]], -pending? [[_]]}}}, :protocol-symbol true, :name promesa.protocols/IState, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 20, :column 1, :line 34, :protocol-info {:methods {-extract [[_]], -resolved? [[_]], -rejected? [[_]], -pending? [[_]]}}, :info nil, :end-line 34, :tag any, :impls #{}, :doc "Additional state/introspection abstraction.", :jsdoc ("@interface")}, -cancelled? {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 48, :column 4, :end-line 48, :end-column 15, :protocol promesa.protocols/ICancellable, :doc nil, :arglists (quote ([_]))}, :protocol promesa.protocols/ICancellable, :name promesa.protocols/-cancelled?, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 15, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, -resolved? {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 37, :column 4, :end-line 37, :end-column 14, :protocol promesa.protocols/IState, :doc "Returns true if a promise is resolved.", :arglists (quote ([_]))}, :protocol promesa.protocols/IState, :name promesa.protocols/-resolved?, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns true if a promise is resolved."}, -schedule {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 52, :column 4, :end-line 52, :end-column 13, :protocol promesa.protocols/IScheduler, :doc "Schedule a function to be executed in future.", :arglists (quote ([_ ms func]))}, :protocol promesa.protocols/IScheduler, :name promesa.protocols/-schedule, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 13, :method-params ([_ ms func]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 52, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ ms func])), :doc "Schedule a function to be executed in future."}, -pending? {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 39, :column 4, :end-line 39, :end-column 13, :protocol promesa.protocols/IState, :doc "Retutns true if a promise is pending.", :arglists (quote ([_]))}, :protocol promesa.protocols/IState, :name promesa.protocols/-pending?, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Retutns true if a promise is pending."}, -rejected? {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 38, :column 4, :end-line 38, :end-column 14, :protocol promesa.protocols/IState, :doc "Returns true if a promise is rejected.", :arglists (quote ([_]))}, :protocol promesa.protocols/IState, :name promesa.protocols/-rejected?, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns true if a promise is rejected."}, ICancellable {:meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 45, :column 14, :end-line 45, :end-column 26, :doc "A cancellation abstraction.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-cancel [[_]], -cancelled? [[_]]}}}, :protocol-symbol true, :name promesa.protocols/ICancellable, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 26, :column 1, :line 45, :protocol-info {:methods {-cancel [[_]], -cancelled? [[_]]}}, :info nil, :end-line 45, :tag any, :impls #{}, :doc "A cancellation abstraction.", :jsdoc ("@interface")}, -catch {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 32, :column 4, :end-line 32, :end-column 10, :protocol promesa.protocols/IPromise, :doc "Catch a error in a promise.", :arglists (quote ([_ callback]))}, :protocol promesa.protocols/IPromise, :name promesa.protocols/-catch, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 10, :method-params ([_ callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ callback])), :doc "Catch a error in a promise."}, IPromise {:meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 28, :column 14, :end-line 28, :end-column 22, :doc "A basic future abstraction.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-map [[_ callback]], -bind [[_ callback]], -catch [[_ callback]]}}}, :protocol-symbol true, :name promesa.protocols/IPromise, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 22, :column 1, :line 28, :protocol-info {:methods {-map [[_ callback]], -bind [[_ callback]], -catch [[_ callback]]}}, :info nil, :end-line 28, :tag any, :impls #{}, :doc "A basic future abstraction.", :jsdoc ("@interface")}, -bind {:protocol-inline nil, :meta {:file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :line 31, :column 4, :end-line 31, :end-column 9, :protocol promesa.protocols/IPromise, :doc "Chain a promise.", :arglists (quote ([_ callback]))}, :protocol promesa.protocols/IPromise, :name promesa.protocols/-bind, :variadic false, :file "/Users/vitalijreicherdt/BlockChain/Fabric/B9Lab/chaintool/fabric-chaintool/examples/example02/client/cljs/target/nodecljs/src/promesa/protocols.cljc", :end-column 9, :method-params ([_ callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ callback])), :doc "Chain a promise."}}, :require-macros nil, :doc "A generic promise abstraction and related protocols."}